openapi: 3.0.0
info:
  title: KadÄ±nHepp Project API
  description: This API provides endpoints for managing users and posts.
  version: 1.0.0
servers:
  - url: http://localhost:3000/
  - url: https://kadinhepp-7229fba7916e.herokuapp.com
paths:
  /:
    get:
      summary: Get posts based on logged in user's location
      description: Retrieve posts based on the location of the logged-in user.
      responses:
        '200':
          description: A list of posts based on the user's location
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string 
  /post/{category}:
    get:
      summary: Get posts by logged in user's location and category
      parameters:
        - in: path
          name: category
          required: true
          description: The category of the posts to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Post"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /user/register:
    post:
      summary: Create a new user
      description: Create a new user with the provided information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user.
                email:
                  type: string
                  description: The email address of the user.
                password:
                  type: string
                  description: The password of the user.
                location:
                  type: string
                  description: The location of the user.
              required:
                - name
                - email
                - password
                - location
      responses:
        "201":
          description: User successfully created.
        "400":
          description: Bad request. Some required fields are missing or invalid.

  /user/login:
    post:
      summary: User login
      description: Log in an existing user with provided credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - name
                - password
      responses:
        "200":
          description: Successful login.
        "401":
          description: Unauthorized. Invalid credentials.
        "500":
          description: Internal server error.
  /post/createPost:
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                category:
                  type: string
                location:
                  type: string
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Post'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /post/update/{id}:
    put:
      summary: Update a post
      description: Update an existing post with the provided information.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the post to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                category:
                  type: string
                location:
                  type: string
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Post'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /post/delete/{id}:
    delete:
      summary: Delete a post
      description: Delete an existing post with the provided ID.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the post to delete
          schema:
            type: string
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /post/get/Userpost:
    get:
      summary: Get active user's posts
      description: Retrieve posts created by the active user.
      responses:
        '200':
          description: A list of posts created by the active user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /user/getActiveUser:
    get:
      summary: Get active user information
      description: Retrieve information about the active user.
      responses:
        '201':
          description: Information about the active user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

components:
  schemas:
    Post:
      type: object
      properties:
        user:
          type: string
        content:
          type: string
        category:
          type: string
        location:
          type: string
        photo:
          type: array
          items:
            type: string